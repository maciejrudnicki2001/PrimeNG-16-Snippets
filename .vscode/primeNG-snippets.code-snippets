{
  "AutoCompleteBasic": {
    "scope": "html",
    "prefix": "p-autoComplete-basic",
    "body": [
      "<p-autoComplete [(ngModel)]=\"${1:text}\" [suggestions]=\"${2:results}\" (completeMethod)=\"${3:yourSearchFunction}(\\$event)\"></p-autoComplete>"
    ],
    "description": "Basic p-autoComplete"
  },
  "AutoCompleteReactive": {
    "scope": "html",
    "prefix": "p-autoComplete-reactive",
    "body": [
      "<p-autoComplete formControlName=\"${1:name}\" [suggestions]=\"${2:results}\" (completeMethod)=\"${3:yourSearchFunction}(\\$event)\" field=\"${4:name}\"></p-autoComplete>"
    ],
    "description": "Reactive Forms p-autoComplete"
  },
  "CalendarBasic": {
    "scope": "html",
    "prefix": "p-calendar-basic",
    "body": ["<p-calendar [(ngModel)]=\"${1:date}\"></p-calendar>"],
    "description": "Basic p-calendar"
  },
  "CalendarReactive": {
    "scope": "html",
    "prefix": "p-calendar-reactive",
    "body": ["<p-calendar formControlName=\"${1:name}\"></p-calendar>"],
    "description": "Reactive Forms p-calendar"
  },
  "CascadeSelectBasic": {
    "scope": "html",
    "prefix": "p-cascadeSelect-basic",
    "body": [
      "<p-cascadeSelect [(ngModel)]=\"${1:country}\" [options]=\"${2:countries}\" optionLabel=\"${3:name}\" optionGroupLabel=\"${4:name}\" [optionGroupChildren]=\"${5:states}\" placeholder=\"${6:Select a Country}\"></p-cascadeSelect>"
    ],
    "description": "Basic p-cascadeSelect"
  },
  "CascadeSelectReactive": {
    "scope": "html",
    "prefix": "p-cascadeSelect-reactive",
    "body": [
      "<p-cascadeSelect formControlName=\"${1:country}\" [options]=\"${2:countries}\" optionLabel=\"${3:name}\" optionGroupLabel=\"${4:name}\" [optionGroupChildren]=\"${5:states}\" placeholder=\"${6:Select a Country}\"></p-cascadeSelect>"
    ],
    "description": "Reactive Forms p-cascadeSelect"
  },
  "CheckboxBasic": {
    "scope": "html",
    "prefix": "p-checkbox-basic",
    "body": [
      "<p-checkbox [(ngModel)]=\"${1:checked}\" [binary]=\"${2:boolean}\" inputId=\"${3:inputId}\"></p-checkbox>"
    ],
    "description": "Basic p-checkbox"
  },
  "CheckboxReactive": {
    "scope": "html",
    "prefix": "p-checkbox-reactive",
    "body": [
      "<p-checkbox formControlName=\"${1:name}\" value=\"${2:value}\" inputId=\"${3:inputId}\"></p-checkbox>"
    ],
    "description": "Reactive Forms p-checkbox"
  },
  "ChipsBasic": {
    "scope": "html",
    "prefix": "p-chips-basic",
    "body": ["<p-chips [(ngModel)]=\"${1:value}\"></p-chips>"],
    "description": "Basic p-chips"
  },
  "ChipsReactive": {
    "scope": "html",
    "prefix": "p-chips-reactive",
    "body": ["<p-chips formControlName=\"${1:name}\"></p-chips>"],
    "description": "Reactive Forms p-chips"
  },
  "ColorPickerBasic": {
    "scope": "html",
    "prefix": "p-colorPicker-basic",
    "body": ["<p-colorPicker [(ngModel)]=\"${1:color}\"></p-colorPicker>"],
    "description": "Basic p-colorPicker"
  },
  "ColorPickerReactive": {
    "scope": "html",
    "prefix": "p-colorPicker-reactive",
    "body": ["<p-colorPicker formControlName=\"${1:name}\"></p-colorPicker>"],
    "description": "Reactive Forms p-colorPicker"
  },
  "DropdownBasic": {
    "scope": "html",
    "prefix": "p-dropdown-basic",
    "body": [
      "<p-dropdown [(ngModel)]=\"${1:city}\" [options]=\"${2:cities}\" optionLabel=\"${3:name}\" [showClear]=\"${4:boolean}\" placeholder=\"${5:name}\"></p-dropdown>"
    ],
    "description": "Basic p-dropdown"
  },
  "DropdownReactive": {
    "scope": "html",
    "prefix": "p-dropdown-reactive",
    "body": [
      "<p-dropdown formControlName=\"${1:city}\" [options]=\"${2:cities}\" optionLabel=\"${3:name}\" placeholder=\"${5:name}\"></p-dropdown>"
    ],
    "description": "Reactive Forms p-dropdown"
  },
  "EditorBasic": {
    "scope": "html",
    "prefix": "p-editor-basic",
    "body": ["<p-editor [(ngModel)]=\"${1:text}\"></p-editor>"],
    "description": "Basic p-editor"
  },
  "EditorReactive": {
    "scope": "html",
    "prefix": "p-editor-reactive",
    "body": ["<p-editor formControlName=\"${1:text}\"></p-editor>"],
    "description": "Reactive Forms p-editor"
  },
  "InputGroupBasic": {
    "scope": "html",
    "prefix": "p-inputGroup-basic",
    "body": [
      "<div class=\"p-inputgroup\"><span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span><input type=\"text\" pInputText placeholder=\"${1:Username}\"></div>"
    ],
    "description": "Basic p-inputGroup"
  },
  "InputMaskBasic": {
    "scope": "html",
    "prefix": "p-inputMask-basic",
    "body": [
      "<p-inputMask [(ngModel)]=\"${1:value}\" mask=\"${2:99-99999}\" placeholder=\"${3:99-99999}\"></p-inputMask>"
    ],
    "description": "Basic p-inputMask"
  },
  "InputMaskReactive": {
    "scope": "html",
    "prefix": "p-inputMask-reactive",
    "body": [
      "<p-inputMask formControlName=\"${1:name}\" mask=\"${2:99-99999}\" placeholder=\"${3:99-99999}\"></p-inputMask>"
    ],
    "description": "Reactive Forms p-inputMask"
  },
  "InputSwitchBasic": {
    "scope": "html",
    "prefix": "p-inputSwitch-basic",
    "body": ["<p-inputSwitch [(ngModel)]=\"${1:checked}\"></p-inputSwitch>"],
    "description": "Basic p-inputSwitch"
  },
  "InputSwitchReactive": {
    "scope": "html",
    "prefix": "p-inputSwitch-reactive",
    "body": ["<p-inputSwitch formControlName=\"${1:name}\"></p-inputSwitch>"],
    "description": "Reactive Forms p-inputSwitch"
  },
  "InputTextBasic": {
    "scope": "html",
    "prefix": "p-inputText-basic",
    "body": ["<input type=\"${1:text}\" pInputText [(ngModel)]=\"${2:text}\">"],
    "description": "Basic p-inputText"
  },
  "InputTextReactive": {
    "scope": "html",
    "prefix": "p-inputText-reactive",
    "body": [
      "<input type=\"${1:text}\" pInputText formControlName=\"${2:text}\">"
    ],
    "description": "Reactive Forms p-inputText"
  },
  "InputTextareaBasic": {
    "scope": "html",
    "prefix": "p-inputTextarea-basic",
    "body": [
      "<textarea rows=\"${1:x}\" cols=\"${2:y}\" pInputTextarea [(ngModel)]=\"${3:text}\"></textarea>"
    ],
    "description": "Basic p-inputTextarea"
  },
  "InputTextareaReactive": {
    "scope": "html",
    "prefix": "p-inputTextarea-reactive",
    "body": [
      "<textarea rows=\"${1:x}\" cols=\"${2:y}\" pInputTextarea formControlName=\"${3:text}\"></textarea>"
    ],
    "description": "Reactive Forms p-inputTextarea"
  },
  "InputNumberIntegerOnlyBasic": {
    "scope": "html",
    "prefix": "p-inputNumber-integer-only-basic",
    "body": [
      "<p-inputNumber inputId=\"${1:integeronly}\" [(ngModel)]=\"${2:value}\"></p-inputNumber>"
    ],
    "description": "Basic p-inputNumber with integer only"
  },
  "InputNumberIntegerOnlyReactive": {
    "scope": "html",
    "prefix": "p-inputNumber-integer-only-reactive",
    "body": [
      "<p-inputNumber inputId=\"${1:integeronly}\" formControlName=\"${2:value}\"></p-inputNumber>"
    ],
    "description": "Reactive Forms p-inputNumber with integer only"
  },
  "InputNumberWithoutGroupingBasic": {
    "scope": "html",
    "prefix": "p-inputNumber-without-grouping-basic",
    "body": [
      "<p-inputNumber inputId=\"${1:withoutgrouping}\" [(ngModel)]=\"${2:value}\" mode=\"${3:decimal}\" [useGrouping]=\"${4:false}\"></p-inputNumber>"
    ],
    "description": "Basic p-inputNumber without grouping"
  },
  "InputNumberWithoutGroupingReactive": {
    "scope": "html",
    "prefix": "p-inputNumber-without-grouping-reactive",
    "body": [
      "<p-inputNumber inputId=\"${1:withoutgrouping}\" formControlName=\"${2:value}\" mode=\"${3:decimal}\" [useGrouping]=\"${4:false}\"></p-inputNumber>"
    ],
    "description": "Reactive Forms p-inputNumber without grouping"
  },
  "InputNumberMinMaxFractionDigitsBasic": {
    "scope": "html",
    "prefix": "p-inputNumber-min-max-fraction-digits-basic",
    "body": [
      "<p-inputNumber inputId=\"${1:minmaxfraction}\" [(ngModel)]=\"${2:value}\" [minFractionDigits]=\"${3:number}\" [maxFractionDigits]=\"${4:number}\"></p-inputNumber>"
    ],
    "description": "Basic p-inputNumber with min and max fraction digits"
  },
  "InputNumberMinMaxFractionDigitsReactive": {
    "scope": "html",
    "prefix": "p-inputNumber-min-max-fraction-digits-reactive",
    "body": [
      "<p-inputNumber inputId=\"${1:minmaxfraction}\" formControlName=\"${2:value}\" [minFractionDigits]=\"${3:number}\" [maxFractionDigits]=\"${4:number}\"></p-inputNumber>"
    ],
    "description": "Reactive Forms p-inputNumber with min and max fraction digits"
  },
  "InputNumberMinMaxBoundariesBasic": {
    "scope": "html",
    "prefix": "p-inputNumber-min-max-boundaries-basic",
    "body": [
      "<p-inputNumber inputId=\"${1:minmax}\" [(ngModel)]=\"${2:value}\" [min]=\"${3:number}\" [max]=\"${4:number}\" mode=\"${5:decimal}\"></p-inputNumber>"
    ],
    "description": "Basic p-inputNumber with min and max boundaries"
  },
  "InputNumberMinMaxBoundariesReactive": {
    "scope": "html",
    "prefix": "p-inputNumber-min-max-boundaries-reactive",
    "body": [
      "<p-inputNumber inputId=\"${1:minmax}\" formControlName=\"${2:value}\" [min]=\"${3:number}\" [max]=\"${4:number}\" mode=\"${5:decimal}\"></p-inputNumber>"
    ],
    "description": "Reactive Forms p-inputNumber with min and max boundaries"
  },
  "KnobBasic": {
    "scope": "html",
    "prefix": "p-knob-basic",
    "body": ["<p-knob [(ngModel)]=\"${1:value}\"></p-knob>"],
    "description": "Basic p-knob"
  },
  "KnobReactive": {
    "scope": "html",
    "prefix": "p-knob-reactive",
    "body": ["<p-knob formControlName=\"${1:name}\"></p-knob>"],
    "description": "Reactive Forms p-knob"
  },
  "KeyFilterIntBasic": {
    "scope": "html",
    "prefix": "p-keyFilter-integer-basic",
    "body": [
      "<input pInputText pKeyFilter=\"${1:int}\" placeholder=\"${2:Enter only integers}\">"
    ],
    "description": "Basic p-keyFilter for integer"
  },
  "KeyFilterIntReactive": {
    "scope": "html",
    "prefix": "p-keyFilter-integer-reactive",
    "body": [
      "<input pInputText id=\"${1:integer}\" pKeyFilter=\"${2:int}\" formControlName=\"${3:value}\" placeholder=\"${4:Enter only integers}\" >"
    ],
    "description": "Reactive Forms p-keyFilter for integer"
  },
  "KeyFilterNumberBasic": {
    "scope": "html",
    "prefix": "p-keyFilter-number-basic",
    "body": [
      "<input pInputText pKeyFilter=\"${1:num}\" placeholder=\"${2:Enter only numbers}\">"
    ],
    "description": "Basic p-keyFilter for number"
  },
  "KeyFilterNumberReactive": {
    "scope": "html",
    "prefix": "p-keyFilter-number-reactive",
    "body": [
      "<input pInputText id=\"${1:number}\" pKeyFilter=\"${2:num}\" formControlName=\"${3:value}\" placeholder=\"${4:Enter only numbers}\">"
    ],
    "description": "Reactive Forms p-keyFilter for number"
  },
  "KeyFilterMoneyBasic": {
    "scope": "html",
    "prefix": "p-keyFilter-money-basic",
    "body": [
      "<input pInputText pKeyFilter=\"${1:money}\" placeholder=\"${2:Enter only money}\">"
    ],
    "description": "Basic p-keyFilter for money"
  },
  "KeyFilterMoneyReactive": {
    "scope": "html",
    "prefix": "p-keyFilter-money-reactive",
    "body": [
      "<input pInputText id=\"${1:money}\" pKeyFilter=\"${2:money}\" formControlName=\"${3:value}\" placeholder=\"${4:Enter only money}\">"
    ],
    "description": "Reactive Forms p-keyFilter for money"
  },
  "KeyFilterHexBasic": {
    "scope": "html",
    "prefix": "p-keyFilter-hex-basic",
    "body": [
      "<input pInputText pKeyFilter=\"${1:hex}\" placeholder=\"${2:Enter only hex}\">"
    ],
    "description": "Basic p-keyFilter for hex"
  },
  "KeyFilterHexReactive": {
    "scope": "html",
    "prefix": "p-keyFilter-hex-reactive",
    "body": [
      "<input pInputText id=\"${1:hex}\" pKeyFilter=\"${2:hex}\" formControlName=\"${3:value}\" placeholder=\"${4:Enter only hex}\">"
    ],
    "description": "Reactive Forms p-keyFilter for hex"
  },
  "KeyFilterAlphabeticBasic": {
    "scope": "html",
    "prefix": "p-keyFilter-Alphabetic-basic",
    "body": [
      "<input pInputText pKeyFilter=\"${1:alpha}\" placeholder=\"${2:Enter only alphabetic}\">"
    ],
    "description": "Basic p-keyFilter for Alphabetic"
  },
  "KeyFilterAlphabeticReactive": {
    "scope": "html",
    "prefix": "p-keyFilter-Alphabetic-reactive",
    "body": [
      "<input pInputText id=\"${1:alpha}\" pKeyFilter=\"${2:alpha}\" formControlName=\"${3:value}\" placeholder=\"${4:Enter only alphabetic}\">"
    ],
    "description": "Reactive Forms p-keyFilter for Alphabetic"
  },
  "KeyFilterAlphanumericBasic": {
    "scope": "html",
    "prefix": "p-keyFilter-Alphanumeric-basic",
    "body": [
      "<input pInputText pKeyFilter=\"${1:alphanum}\" placeholder=\"${2:Enter only alphanumeric}\">"
    ],
    "description": "Basic p-keyFilter for Alphanumeric"
  },
  "KeyFilterAlphanumericReactive": {
    "scope": "html",
    "prefix": "p-keyFilter-Alphanumeric-reactive",
    "body": [
      "<input pInputText id=\"${1:alphanum}\" pKeyFilter=\"${2:alphanum}\" formControlName=\"${3:value}\" placeholder=\"${4:Enter only alphanumeric}\">"
    ],
    "description": "Reactive Forms p-keyFilter for Alphanumeric"
  },
  "ListboxBasic": {
    "scope": "html",
    "prefix": "p-listbox-basic",
    "body": [
      "<p-listbox [(ngModel)]=\"${1:selectedCity}\" [options]=\"${2:cities}\" optionLabel=\"${3:name}\"></p-listbox>"
    ],
    "description": "Basic p-listbox"
  },
  "ListboxReactive": {
    "scope": "html",
    "prefix": "p-listbox-reactive",
    "body": [
      "<p-listbox formControlName=\"${1:selectedCity}\" [options]=\"${2:cities}\" optionLabel=\"${3:name}\"></p-listbox>"
    ],
    "description": "Reactive Forms p-listbox"
  },
  "MultiSelectBasic": {
    "scope": "html",
    "prefix": "p-multiSelect-basic",
    "body": [
      "<p-multiSelect [(ngModel)]=\"${1:selectedCities}\" [options]=\"${2:cities}\" optionLabel=\"${3:name}\"></p-multiSelect>"
    ],
    "description": "Basic p-multiSelect"
  },
  "MultiSelectReactive": {
    "scope": "html",
    "prefix": "p-multiSelect-reactive",
    "body": [
      "<p-multiSelect formControlName=\"${1:selectedCities}\" [options]=\"${2:cities}\" optionLabel=\"${3:name}\"></p-multiSelect>"
    ],
    "description": "Reactive Forms p-multiSelect"
  },
  "PasswordBasic": {
    "scope": "html",
    "prefix": "p-password-basic",
    "body": [
      "<p-password [(ngModel)]=\"${1:value}\" [feedback]=\"${2:false}\"></p-password>"
    ],
    "description": "Basic p-password"
  },
  "PasswordReactive": {
    "scope": "html",
    "prefix": "p-password-reactive",
    "body": [
      "<p-password formControlName=\"${1:value}\" [feedback]=\"${2:false}\"></p-password>"
    ],
    "description": "Reactive Forms p-password"
  },
  "RadioButtonBasic": {
    "scope": "html",
    "prefix": "p-radioButton-basic",
    "body": [
      "<p-radioButton name=\"${1:name}\" value=\"${2:value}\" [(ngModel)]=\"${3:selectedValue}\" inputId=\"${4:inputId}\"></p-radioButton>"
    ],
    "description": "Basic p-radioButton"
  },
  "RadioButtonReactive": {
    "scope": "html",
    "prefix": "p-radioButton-reactive",
    "body": [
      "<p-radioButton formControlName=\"${1:name}\" value=\"${2:value}\" inputId=\"${3:inputId}\"></p-radioButton>"
    ],
    "description": "Reactive Forms p-radioButton"
  },
  "RatingBasic": {
    "scope": "html",
    "prefix": "p-rating-basic",
    "body": ["<p-rating [(ngModel)]=\"${1:value}\"></p-rating>"],
    "description": "Basic p-rating"
  },
  "RatingReactive": {
    "scope": "html",
    "prefix": "p-rating-reactive",
    "body": ["<p-rating formControlName=\"${1:name}\"></p-rating>"],
    "description": "Reactive Forms p-rating"
  },
  "SelectButtonBasic": {
    "scope": "html",
    "prefix": "p-selectButton-basic",
    "body": [
      "<p-selectButton [options]=\"${1:stateOptions}\" [(ngModel)]=\"${2:value}\" optionLabel=\"${3:optionLabel}\" optionValue=\"${4:optionValue}\"></p-selectButton>"
    ],
    "description": "Basic p-selectButton"
  },
  "SelectButtonReactive": {
    "scope": "html",
    "prefix": "p-selectButton-reactive",
    "body": [
      "<p-selectButton [options]=\"${1:stateOptions}\" formControlName=\"${2:value}\" optionLabel=\"${3:optionLabel}\" optionValue=\"${4:optionValue}\"></p-selectButton>"
    ],
    "description": "Reactive Forms p-selectButton"
  },
  "SliderBasic": {
    "scope": "html",
    "prefix": "p-slider-basic",
    "body": ["<p-slider [(ngModel)]=\"${1:value}\"></p-slider>"],
    "description": "Basic p-slider"
  },
  "SliderReactive": {
    "scope": "html",
    "prefix": "p-slider-reactive",
    "body": ["<p-slider formControlName=\"${1:name}\"></p-slider>"],
    "description": "Reactive Forms p-slider"
  },
  "TreeSelectBasic": {
    "scope": "html",
    "prefix": "p-treeSelect-basic",
    "body": [
      "<p-treeSelect [(ngModel)]=\"${1:selectedNodes}\" [options]=\"${2:nodes}\" placeholder=\"${3:Select Item}\" ></p-treeSelect>"
    ],
    "description": "Basic p-treeSelect"
  },
  "TreeSelectReactive": {
    "scope": "html",
    "prefix": "p-treeSelect-reactive",
    "body": [
      "<p-treeSelect formControlName=\"${1:selectedNodes}\" [options]=\"${2:nodes}\" placeholder=\"${3:Select Item}\" ></p-treeSelect>"
    ],
    "description": "Reactive Forms p-treeSelect"
  },
  "TriStateCheckboxBasic": {
    "scope": "html",
    "prefix": "p-triStateCheckbox-basic",
    "body": [
      "<p-triStateCheckbox [(ngModel)]=\"${1:value}\" inputId=\"${2:tricheckbox}\" ></p-triStateCheckbox>"
    ],
    "description": "Basic p-triStateCheckbox"
  },
  "TriStateCheckboxReactive": {
    "scope": "html",
    "prefix": "p-triStateCheckbox-reactive",
    "body": [
      "<p-triStateCheckbox formControlName=\"${1:value}\" inputId=\"${2:tricheckbox}\" ></p-triStateCheckbox>"
    ],
    "description": "Reactive Forms p-triStateCheckbox"
  },
  "ToggleButtonBasic": {
    "scope": "html",
    "prefix": "p-toggleButton-basic",
    "body": [
      "<p-toggleButton [(ngModel)]=\"${1:value}\" onLabel=\"${2:Yes}\" offLabel=\"${3:No}\"></p-toggleButton>"
    ],
    "description": "Basic p-toggleButton"
  },
  "ToggleButtonReactive": {
    "scope": "html",
    "prefix": "p-toggleButton-reactive",
    "body": [
      "<p-toggleButton formControlName=\"${1:value}\" onLabel=\"${2:Yes}\" offLabel=\"${3:No}\"></p-toggleButton>"
    ],
    "description": "Reactive Forms p-toggleButton"
  },
  "ButtonBasic": {
    "scope": "html",
    "prefix": "p-button-basic",
    "body": ["<p-button label=\"${1:name}\"></p-button>"],
    "description": "Basic p-button"
  },
  "ButtonDirective": {
    "scope": "html",
    "prefix": "p-button-directive",
    "body": [
      "<button pButton pRipple type=\"${1:button}\" class=\"${2:p-button-success}\">name</button>"
    ],
    "description": "pButton Directive"
  },
  "SplitButtonBasic": {
    "scope": "html",
    "prefix": "p-splitButton-basic",
    "body": [
      "<p-splitButton label=\"${1:Save}\" icon=\"${2:pi pi-plus}\" (onClick)=\"${3:save('info')}\" [model]=\"${4:items}\"></p-splitButton>"
    ],
    "description": "Basic p-splitButton"
  },
  "SpeedDialLinearUp": {
    "scope": "html",
    "prefix": "p-speedDial-linear-up",
    "body": [
      "<p-speedDial [model]=\"${1:items}\" direction=\"${2:up}\"></p-speedDial>"
    ],
    "description": "SpeedDial Linear Up"
  },
  "SpeedDialLinearDown": {
    "scope": "html",
    "prefix": "p-speedDial-linear-down",
    "body": [
      "<p-speedDial [model]=\"${1:items}\" direction=\"${2:down}\"></p-speedDial>"
    ],
    "description": "SpeedDial Linear Down"
  },
  "SpeedDialLinearLeft": {
    "scope": "html",
    "prefix": "p-speedDial-linear-left",
    "body": [
      "<p-speedDial [model]=\"${1:items}\" direction=\"${2:left}\"></p-speedDial>"
    ],
    "description": "SpeedDial Linear Left"
  },
  "SpeedDialLinearRight": {
    "scope": "html",
    "prefix": "p-speedDial-linear-right",
    "body": [
      "<p-speedDial [model]=\"${1:items}\" direction=\"${2:right}\"></p-speedDial>"
    ],
    "description": "SpeedDial Linear Right"
  },
  "SpeedDialCircle": {
    "scope": "html",
    "prefix": "p-speedDial-circle",
    "body": [
      "<p-speedDial [model]=\"${1:items}\" type=\"${2:circle}\" [radius]=\"${3:80}\" buttonClassName=\"${4:p-button-class}\"></p-speedDial>"
    ],
    "description": "SpeedDial Circle"
  },
  "SpeedDialSemiCircleUp": {
    "scope": "html",
    "prefix": "p-speedDial-semi-circle-up",
    "body": [
      "<p-speedDial [model]=\"${1:items}\" direction=\"${2:up}\" [radius]=\"${3:80}\" type=\"${4:semi-circle}\"></p-speedDial>"
    ],
    "description": "SpeedDial Semi Circle Up"
  },
  "SpeedDialSemiCircleDown": {
    "scope": "html",
    "prefix": "p-speedDial-semi-circle-down",
    "body": [
      "<p-speedDial [model]=\"${1:items}\" direction=\"${2:down}\" [radius]=\"${3:80}\" type=\"${4:semi-circle}\"></p-speedDial>"
    ],
    "description": "SpeedDial Semi Circle Down"
  },
  "SpeedDialSemiCircleLeft": {
    "scope": "html",
    "prefix": "p-speedDial-semi-circle-left",
    "body": [
      "<p-speedDial [model]=\"${1:items}\" direction=\"${2:left}\" [radius]=\"${3:80}\" type=\"${4:semi-circle}\"></p-speedDial>"
    ],
    "description": "SpeedDial Semi Circle Left"
  },
  "SpeedDialSemiCircleRight": {
    "scope": "html",
    "prefix": "p-speedDial-semi-circle-right",
    "body": [
      "<p-speedDial [model]=\"${1:items}\" direction=\"${2:right}\" [radius]=\"${3:80}\" type=\"${4:semi-circle}\"></p-speedDial>"
    ],
    "description": "SpeedDial Semi Circle Right"
  },
  "TableBasic": {
    "scope": "html",
    "prefix": "p-table-basic",
    "body": [
      "<p-table [value]=\"${1:products}\" [tableStyle]=\"${2:{ 'min-width': '50rem' }}\">",
      "<ng-template pTemplate=\"${3:header}\">",
      "<tr>",
      "<th>\"${4:first-th-name}\"</th>",
      "<th>\"${5:second-th-name}\"</th>",
      "<th>\"${6:third-th-name}\"</th>",
      "</tr>",
      "</ng-template>",
      "<ng-template pTemplate=\"${7:body}\" let-product>",
      "<tr>",
      "<td>{{ \"${9:product.first-td-name}\" }}</td>",
      "<td>{{ \"${10:product.second-td-name}\" }}</td>",
      "<td>{{ \"${11:product.third-td-name}\" }}</td>",
      "</tr>",
      "</ng-template>",
      "</p-table>"
    ],
    "description": "Basic p-table"
  },
  "TableDynamic": {
    "scope": "html",
    "prefix": "p-table-dynamic",
    "body": [
      "<p-table [value]=\"${1:products}\" [tableStyle]=\"${2:{ 'min-width': '50rem' }}\">",
      "<ng-template pTemplate=\"${3:header}\">",
      "<tr>",
      "<th *ngFor=\"let col of ${4:cols}\">{{ col.header }}</th>",
      "</tr>",
      "</ng-template>",
      "<ng-template pTemplate=\"${5:body}\" let-product>",
      "<tr>",
      "<td *ngFor=\"let col of ${6:cols}\">{{ product[col.field] }}</td>",
      "</tr>",
      "</ng-template>",
      "</p-table>"
    ],
    "description": "Dynamic p-table"
  },
  "DataViewBasic": {
    "scope": "html",
    "prefix": "p-dataView-basic",
    "body": [
      "<p-dataView #dv [value]=\"${1:products}\" [paginator]=\"${2:true}\" [rows]=\"${3:10}\">",
      "<ng-template pTemplate=\"${4:itemTemplate}\" let-product>",
      "<div class=\"product-item\">",
      "<h4>{{ product.name }}</h4>",
      "<p>{{ product.description }}</p>",
      "</div>",
      "</ng-template>",
      "</p-dataView>"
    ],
    "description": "Basic p-dataView"
  },
  "ScrollerBasic": {
    "scope": "html",
    "prefix": "p-scroller-basic",
    "body": [
      "<p-scroller [items]=\"${1:items}\" [itemSize]=\"${2:number}\" scrollHeight=\"${3:200px}\" styleClass=\"${4:border-1 surface-border}\" [style]=\"${5:{'width': '200px', 'height': '200px'}}\">",
      "<ng-template pTemplate=\"${6:item}\" let-item let-options=\"${7:options}\">",
      "<div class=\"${8:flex align-items-center p-2}\" [ngClass]=\"${9:{ 'surface-ground': options.odd }}\" style=\"${10:height: 50px;}\">{{ \"${11:item}\" }}</div>",
      "</ng-template>",
      "</p-scroller>"
    ],
    "description": "Basic p-scroller"
  },
  "OrderListBasic": {
    "scope": "html",
    "prefix": "p-orderList-basic",
    "body": [
      "<p-orderList [value]=\"${1:products}\" [header]=\"${2:OrderList}\" [listStyle]=\"${3:{'min-height': '250px'}}\">",
      "<ng-template let-product pTemplate=\"${4:item}\">",
      "<div class=\"${5:flex flex-wrap p-2 align-items-center gap-3}\">",
      "<img src=\"${6:path-to-image-{{product.name}}}\" alt=\"${7:product.name}\" class=\"${8:w-4rem shadow-2 flex-shrink-0 border-round}\"/>",
      "<div class=\"${9:flex-1 flex flex-column gap-2}\">",
      "<span class=\"${10:font-bold}\"> {{ ${11:product.name} }} </span>",
      "<div class=\"${12:flex align-items-center gap-2}\">",
      "<i class=\"${13:pi pi-tag text-sm}\"></i>",
      "<span>{{ ${14:product.category} }}</span>",
      "</div>",
      "</div>",
      "<span class=\"${15:font-bold text-900}\">{{ ${16:'$' + product.price }}}</span>",
      "</div>",
      "</ng-template>",
      "</p-orderList>"
    ],
    "description": "Basic p-orderList"
  },
  "OrgChartBasic": {
    "scope": "html",
    "prefix": "p-organizationChart-basic",
    "body": [
      "<p-organizationChart [value]=\"${1:data}\"></p-organizationChart>"
    ],
    "description": "Basic p-organizationChart"
  },
  "PaginatorBasic": {
    "scope": "html",
    "prefix": "p-paginator-basic",
    "body": [
      "<p-paginator (onPageChange)=\"${1:onPageChange($event)}\" [first]=\"${2:0}\" [rows]=\"${3:10}\" [totalRecords]=\"${4:totalRecords}\" [rowsPerPageOptions]=\"${5:[10,20,30]}\"></p-paginator>"
    ],
    "description": "Basic p-paginator"
  },
  "PickListBasic": {
    "scope": "html",
    "prefix": "p-pickList-basic",
    "body": [
      "<p-pickList [source]=\"${1:sourceProducts}\" [target]=\"${2:targetProducts}\" sourceHeader=\"${3:Available}\" targetHeader=\"${4:Selected}\" [dragdrop]=\"${5:true}\" [responsive]=\"${6:true}\" [sourceStyle]=\"${7:{ height: '30rem' }}\" [targetStyle]=\"${8:{ height: '30rem' }}\" breakpoint=\"${9:1400px}\">",
      "<ng-template let-product pTemplate=\"${10:item}\">",
      "<div class=\"${11:flex flex-wrap p-2 align-items-center gap-3}\">",
      "<img src=\"${12:path-to-image-{{product.name}}}\" alt=\"${13:product.name}\" class=\"${14:w-4rem shadow-2 flex-shrink-0 border-round}\"/>",
      "<div class=\"${15:flex-1 flex flex-column gap-2}\">",
      "<span class=\"${16:font-bold}\"> {{ ${17:product.name} }} </span>",
      "<div class=\"${18:flex align-items-center gap-2}\">",
      "<i class=\"${19:pi pi-tag text-sm}\"></i>",
      "<span>{{ ${20:product.category} }}</span>",
      "</div>",
      "</div>",
      "<span class=\"${21:font-bold text-900}\">{{ ${22:'$' + product.price }}}</span>",
      "</div>",
      "</ng-template>",
      "</p-pickList>"
    ],
    "description": "Basic p-pickList"
  },
  "TreeBasic": {
    "scope": "html",
    "prefix": "p-tree-basic",
    "body": [
      "<p-tree class=\"${1:w-full md:w-30rem}\" [value]=\"${2:files}\"></p-tree>"
    ],
    "description": "Basic p-tree"
  },
  "TreeTableBasic": {
    "scope": "html",
    "prefix": "p-treeTable-basic",
    "body": [
      "<p-treeTable [value]=\"${1:files}\" [scrollable]=\"${2:true}\" [tableStyle]=\"${3:{'min-width':'50rem'}}\">",
      "<ng-template pTemplate=\"${4:header}\">",
      "<tr>",
      "<th>${5:first-th-name}</th>",
      "<th>${6:second-th-name}</th>",
      "<th>${7:third-th-name}</th>",
      "</tr>",
      "</ng-template>",
      "<ng-template pTemplate=\"${8:body}\" let-rowNode let-rowData=\"${9:rowData}\">",
      "<tr [ttRow]=\"${10:rowNode}\">",
      "<td>",
      "<p-treeTableToggler [rowNode]=\"${11:rowNode}\"></p-treeTableToggler>",
      "{{ ${12:file.first-td-name} }}",
      "</td>",
      "<td>{{ ${13:file.second-td-name} }}</td>",
      "<td>{{ ${14:file.third-td-name} }}</td>",
      "</tr>",
      "</ng-template>",
      "</p-treeTable>"
    ],
    "description": "Basic p-treeTable"
  },
  "TimelineBasic": {
    "scope": "html",
    "prefix": "p-timeline-basic",
    "body": [
      "<p-timeline [value]=\"${1:events}\">",
      "<ng-template pTemplate=\"${2:content}\" let-event>",
      "{{ ${3:event.status} }}",
      "</ng-template>",
      "</p-timeline>"
    ],
    "description": "Basic p-timeline"
  },
  "VirtualScrollerBasic": {
    "scope": "html",
    "prefix": "p-virtualScroller-basic",
    "body": [
      "<p-virtualScroller [value]=\"${1:items}\" class=\"${2:border-1 surface-border border-round}\" [style]=\"${3:{'width': '200px'}}\" scrollHeight=\"${4:200px}\" [itemSize]=\"${5:50}\">",
      "<ng-template pTemplate=\"${6:item}\" let-item>",
      "<div class=\"${7:flex align-items-center p-2 h-full}\" [ngClass]=\"${8:{ 'surface-hover': item.index % 2 === 0 }}\">",
      "{{ ${9:item.label} }}",
      "</div>",
      "</ng-template>",
      "</p-virtualScroller>"
    ],
    "description": "Basic p-virtualScroller"
  }
}
